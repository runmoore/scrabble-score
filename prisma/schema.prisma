datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
  games    Game[]
  players  Player[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Player {
  id   String @id @default(cuid())
  name String

  games  Game[]
  scores Score[]

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Game {
  id String @id @default(cuid())

  createdAt DateTime @default(now())

  players Player[]

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  completed Boolean? @default(false)

  scores Score[]
}

model Score {
  id String @id @default(cuid())

  player   Player @relation(fields: [playerId], references: [id])
  playerId String

  game   Game   @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId String

  scoredAt DateTime @default(now())

  points Int
}
